name: Poll for Container URL

on:
  repository_dispatch:
    types: [poll-container-url]

jobs:
  poll:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository so scripts exist
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Extract inputs from repository_dispatch event
      - name: Extract inputs
        id: inputs
        run: |
          echo "pr_number=${{ github.event.client_payload.pr_number }}" >> $GITHUB_OUTPUT
          echo "container_id=${{ github.event.client_payload.container_id }}" >> $GITHUB_OUTPUT

      # Step 3: Make script executable and run it
      - name: Poll until container URL is ready
        run: |
          chmod +x scripts/check_url.sh
          URL=$(./scripts/check_url.sh "${{ steps.inputs.outputs.container_id }}")
          echo "container_url=$URL" >> $GITHUB_ENV

      # Step 4: Fetch JSON from the container URL
      - name: Fetch JSON
        id: fetch
        run: |
          RESPONSE=$(curl -s "$container_url")
          echo "Response: $RESPONSE"
          SAMPLE_URL=$(echo "$RESPONSE" | jq -r '.sample_url')
          echo "sample_url=$SAMPLE_URL" >> $GITHUB_OUTPUT

      # Step 5: Post result back to PR
      - name: Post result back to PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ steps.inputs.outputs.pr_number }}
          body: |
            âœ… Container ID: `${{ steps.inputs.outputs.container_id }}`
            ğŸ“¦ URL: ${{ env.container_url }}
            ğŸ”— Sample URL: ${{ steps.fetch.outputs.sample_url }}
